[{"D:\\year3\\fall\\database\\frontend_2\\src\\index.js":"1","D:\\year3\\fall\\database\\frontend_2\\src\\reportWebVitals.js":"2","D:\\year3\\fall\\database\\frontend_2\\src\\components\\App.js":"3","D:\\year3\\fall\\database\\frontend_2\\src\\components\\Chat.js":"4","D:\\year3\\fall\\database\\frontend_2\\src\\components\\db.js":"5","D:\\year3\\fall\\database\\frontend_2\\src\\components\\MidPane.js":"6","D:\\year3\\fall\\database\\frontend_2\\src\\components\\LeftPane.js":"7","D:\\year3\\fall\\database\\frontend_2\\src\\components\\RightPane.js":"8","D:\\year3\\fall\\database\\frontend_2\\src\\components\\theme.js":"9"},{"size":506,"mtime":1611057732282,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1609901598332,"results":"12","hashOfConfig":"11"},{"size":23547,"mtime":1611079206897,"results":"13","hashOfConfig":"11"},{"size":426,"mtime":1611046195686,"results":"14","hashOfConfig":"11"},{"size":4178,"mtime":1611067409712,"results":"15","hashOfConfig":"11"},{"size":4557,"mtime":1611064931681,"results":"16","hashOfConfig":"11"},{"size":4411,"mtime":1611074277962,"results":"17","hashOfConfig":"11"},{"size":3376,"mtime":1611065771651,"results":"18","hashOfConfig":"11"},{"size":2917,"mtime":1611068371565,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1uh9bxx",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"D:\\year3\\fall\\database\\frontend_2\\src\\index.js",["41"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n// import socketIOClient from \"socket.io-client\";\r\n// const ENDPOINT = \"ws://34.80.122.70:5000/\";\r\n\r\n// const socket = socketIOClient(ENDPOINT);\r\n\r\n\r\n\r\nReactDOM.render(\r\n    \r\n  <App/>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n\r\n\r\n\r\n{/* <React.StrictMode>\r\n<App socket={socket}/>\r\n</React.StrictMode> */}",["42","43"],"D:\\year3\\fall\\database\\frontend_2\\src\\reportWebVitals.js",[],"D:\\year3\\fall\\database\\frontend_2\\src\\components\\App.js",["44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"],"D:\\year3\\fall\\database\\frontend_2\\src\\components\\Chat.js",[],"D:\\year3\\fall\\database\\frontend_2\\src\\components\\db.js",[],"D:\\year3\\fall\\database\\frontend_2\\src\\components\\MidPane.js",[],"D:\\year3\\fall\\database\\frontend_2\\src\\components\\LeftPane.js",["60"],"import React, { useState } from 'react';\r\nimport { faSignOutAlt, faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Popup from 'reactjs-popup';\r\n\r\nimport './Chat.css';\r\n\r\nfunction LeftPane(props) {\r\n    const [newRoomName, setNewRoomName] = useState(\"\")\r\n    const msToTime = (millis) =>{\r\n        var seconds = (millis / 1000).toFixed(0);\r\n        var minutes = (seconds / 60).toFixed(0);\r\n        var hours = (minutes / 60).toFixed(0);\r\n        var days = (hours / 24).toFixed(0);\r\n        var weeks = (days / 7).toFixed(0);\r\n        var years = (days / 365).toFixed(0);\r\n\r\n        if(seconds < 60)\r\n            return `${seconds}s`;\r\n        if(minutes < 60)\r\n            return `${minutes}m`;\r\n        if(hours < 24)\r\n            return `${hours}h`;\r\n        if(days < 30)\r\n            return `${days}d`;\r\n        if(weeks < 55)\r\n            return `${weeks}w`;\r\n        return `${years}y`\r\n    }\r\n\r\n    const getLastTime = (lastSendDate) =>{\r\n        var a = msToTime(Number((Date.now()) - new Date(lastSendDate).getTime()))\r\n        return(a)\r\n    }\r\n\r\n    return (\r\n        <div id=\"LeftPaneContainer\">\r\n            <div id=\"LeftTopBarContainer\">\r\n                <div id=\"logo\" className=\"LeftTopBarElement\" onClick={props.handlers.handleLogOut}>\r\n                    <FontAwesomeIcon icon={faSignOutAlt} className=\"logo-icon\"\r\n                    rotation={180}/>\r\n                </div>\r\n                \r\n                <div id=\"AppNameUser\" className=\"LeftTopBarElement\">\r\n                    {props.data.username}\r\n                </div>\r\n\r\n                <Popup trigger={<div id=\"newRoom\" className=\"LeftTopBarElement\">\r\n                    <FontAwesomeIcon icon={faPlus}  className=\"logo-icon\"/>\r\n                </div>} \r\n                modal>\r\n                     {close => (\r\n                        <div className=\"popup\">\r\n                            <a className=\"close\" onClick={close}>\r\n                                &times;\r\n                            </a>\r\n                            <h3> Room Name: </h3>\r\n                            <div className=\"content\">\r\n                            <input\r\n                                className=\"Left-search-input\"\r\n                                placeholder=\"New Room Name\"\r\n                                value={newRoomName}\r\n                                onChange={(e) => setNewRoomName(e.target.value)}\r\n                                onKeyDown={(e) => {\r\n                                    if(e.key === 'Enter'){\r\n                                        props.handlers.createNewChatroom(newRoomName, setNewRoomName);\r\n                                        close();\r\n                                    }\r\n                                }\r\n                            }\r\n                            ></input>\r\n                            </div>\r\n                        </div>\r\n                        )}\r\n                </Popup>\r\n                \r\n            </div>\r\n            \r\n            <input\r\n                className=\"Left-search-input\"\r\n                placeholder=\"Search Rooms\"\r\n                value={props.data.leftFilter}\r\n                onChange={(e) => props.handlers.setLeftFilter(e.target.value)}\r\n            ></input>\r\n            <div id=\"LeftListOfChatRoom\">\r\n                {props.data.chatRooms.map((chatroom)=>(\r\n                    <div key={chatroom.id} className={`LeftIndividualChatRoom ${chatroom.id===props.data.selectedChat? \"selected\" : \"\"} ${chatroom.last_send_date>=chatroom.last_read_date? \"bold\" : \"\"}`}\r\n                    \r\n                    \r\n                    id={chatroom.id} onClick={(e) => {props.handlers.changeChatRoom(e, chatroom.id)}}>\r\n                        <div className=\"Chatroom-list-title\">{chatroom.name} </div>\r\n                        <div className=\"Chatroom-list-content\"> \r\n                            <div className=\"Chatroom-list-sender\">{chatroom.last_sender}:  </div>\r\n                            <div className=\"Chatroom-list-message\">  {chatroom.last_message}</div>\r\n                            <div className=\"Chatroom-list-time\">{getLastTime(chatroom.last_send_date)}</div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default LeftPane;","D:\\year3\\fall\\database\\frontend_2\\src\\components\\RightPane.js",[],"D:\\year3\\fall\\database\\frontend_2\\src\\components\\theme.js",[],{"ruleId":"61","severity":1,"message":"62","line":26,"column":1,"nodeType":"63","messageId":"64","endLine":28,"endColumn":24},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":117,"column":41,"nodeType":"71","messageId":"72","endLine":117,"endColumn":43},{"ruleId":"69","severity":1,"message":"70","line":118,"column":99,"nodeType":"71","messageId":"72","endLine":118,"endColumn":101},{"ruleId":"69","severity":1,"message":"73","line":127,"column":18,"nodeType":"71","messageId":"72","endLine":127,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":138,"column":8,"nodeType":"76","endLine":138,"endColumn":21,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":148,"column":8,"nodeType":"76","endLine":148,"endColumn":24,"suggestions":"79"},{"ruleId":"74","severity":1,"message":"78","line":158,"column":8,"nodeType":"76","endLine":158,"endColumn":19,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":165,"column":13,"nodeType":"83","messageId":"84","endLine":165,"endColumn":25},{"ruleId":"74","severity":1,"message":"85","line":165,"column":28,"nodeType":"86","endLine":165,"endColumn":46},{"ruleId":"69","severity":1,"message":"70","line":172,"column":16,"nodeType":"71","messageId":"72","endLine":172,"endColumn":18},{"ruleId":"74","severity":1,"message":"78","line":190,"column":8,"nodeType":"76","endLine":190,"endColumn":18,"suggestions":"87"},{"ruleId":"74","severity":1,"message":"88","line":227,"column":8,"nodeType":"76","endLine":227,"endColumn":18,"suggestions":"89"},{"ruleId":"74","severity":1,"message":"90","line":241,"column":8,"nodeType":"76","endLine":241,"endColumn":19,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":255,"column":11,"nodeType":"83","messageId":"94","endLine":255,"endColumn":37},{"ruleId":"74","severity":1,"message":"95","line":325,"column":8,"nodeType":"76","endLine":325,"endColumn":22,"suggestions":"96"},{"ruleId":"74","severity":1,"message":"97","line":371,"column":8,"nodeType":"76","endLine":371,"endColumn":26,"suggestions":"98"},{"ruleId":"92","severity":1,"message":"99","line":650,"column":29,"nodeType":"83","messageId":"94","endLine":650,"endColumn":30},{"ruleId":"100","severity":1,"message":"101","line":54,"column":29,"nodeType":"102","endLine":54,"endColumn":66},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'chatContent', 'chatRooms', 'findIndexFromID', and 'selectedChat'. Either include them or remove the dependency array.","ArrayExpression",["105"],"React Hook useEffect has missing dependencies: 'chatContent' and 'selectedChat'. Either include them or remove the dependency array.",["106"],["107"],"no-const-assign","'selectedChat' is constant.","Identifier","const","Assignments to the 'selectedChat' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression",["108"],"React Hook useEffect has missing dependencies: 'cookie' and 'username'. Either include them or remove the dependency array.",["109"],"React Hook useEffect has a missing dependency: 'selectedChat'. Either include it or remove the dependency array.",["110"],"no-unused-vars","'findContentIndexFromChatID' is assigned a value but never used.","unusedVar","React Hook useEffect has missing dependencies: 'chatRooms', 'cookie', 'findIndexFromID', and 'username'. Either include them or remove the dependency array.",["111"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["112"],"'i' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [chatContent, chatRooms, findIndexFromID, recvMessage, selectedChat]",{"range":"129","text":"130"},"Update the dependencies array to be: [chatContent, recvEmojiTheme, selectedChat]",{"range":"131","text":"132"},"Update the dependencies array to be: [chatContent, recvLeave, selectedChat]",{"range":"133","text":"134"},"Update the dependencies array to be: [chatContent, recvJoin, selectedChat]",{"range":"135","text":"136"},"Update the dependencies array to be: [cookie, recvRoom, username]",{"range":"137","text":"138"},"Update the dependencies array to be: [chatRooms, selectedChat]",{"range":"139","text":"140"},"Update the dependencies array to be: [chatRooms, cookie, findIndexFromID, selectedChat, username]",{"range":"141","text":"142"},"Update the dependencies array to be: [loggedIn, cookie, username]",{"range":"143","text":"144"},[4992,5005],"[chatContent, chatRooms, findIndexFromID, recvMessage, selectedChat]",[5443,5459],"[chatContent, recvEmojiTheme, selectedChat]",[5899,5910],"[chatContent, recvLeave, selectedChat]",[7017,7027],"[chatContent, recvJoin, selectedChat]",[8120,8130],"[cookie, recvRoom, username]",[8499,8510],"[chatRooms, selectedChat]",[10823,10837],"[chatRooms, cookie, findIndexFromID, selectedChat, username]",[12428,12446],"[loggedIn, cookie, username]"]